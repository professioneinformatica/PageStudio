@page "/document-renderer"
@using SkiaSharp.Views.Blazor
@using PageStudio.Core.Models
@using PageStudio.Core.Models.ContainerPageElements
@inject IJSRuntime JSRuntime


<PageTitle>Document Renderer</PageTitle>

<h1>Document Renderer</h1>

<div class="row">
    <div class="col-md-3">
        <div class="card">
            <div class="card-header">
                <h5>Document Controls</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label for="documentName" class="form-label">Document Name</label>
                    <input type="text" class="form-control" id="documentName" @bind="documentName"
                           placeholder="Enter document name">
                </div>

                <div class="mb-3">
                    <button class="btn btn-primary" @onclick="CreateNewDocument">Create New Document</button>
                </div>

                @if (currentDocument != null)
                {
                    <div class="mb-3">
                        <h6>Current Document: @currentDocument.Name</h6>
                        <p><small class="text-muted">Pages: @currentDocument.Pages.Count()</small></p>
                        <p><small
                                class="text-muted">Created: @currentDocument.CreatedAt.ToString("yyyy-MM-dd HH:mm")</small>
                        </p>
                        <p><small
                                class="text-muted">Modified: @currentDocument.ModifiedAt.ToString("yyyy-MM-dd HH:mm")</small>
                        </p>
                    </div>

                    <div class="mb-3">
                        <button class="btn btn-outline-secondary" @onclick="ShowDocumentProperties">
                            <i class="bi bi-gear"></i> Document Properties
                        </button>
                    </div>

                    @if (currentDocument != null)
                    {
                        <div class="mb-3">
                            <button class="btn btn-success" @onclick="ShowAddPagesModal">
                                <i class="bi bi-plus-circle"></i> Add Pages
                            </button>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <div class="col-md-6">
        @if (currentDocument != null && isRendered)
        {
            <!-- Document Toolbar -->
            <div class="card mb-3">
                <div class="card-body py-2">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center gap-3">
                            <!-- Zoom Controls -->
                            <div class="d-flex align-items-center gap-2">
                                <span class="text-muted small">Zoom:</span>
                                <div class="btn-group btn-group-sm" role="group">
                                    <button class="btn btn-outline-secondary" @onclick="ZoomOut" title="Zoom Out">
                                        <i class="bi bi-zoom-out"></i>
                                    </button>
                                    <button class="btn btn-outline-secondary disabled" disabled>
                                        @((zoomLevel * 100).ToString("F0"))%
                                    </button>
                                    <button class="btn btn-outline-secondary" @onclick="ZoomIn" title="Zoom In">
                                        <i class="bi bi-zoom-in"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Layout Mode Controls -->
                            <div class="d-flex align-items-center gap-2">
                                <span class="text-muted small">Layout:</span>
                                <div class="btn-group btn-group-sm" role="group">
                                    <button
                                        class="btn @(layoutMode == PageLayoutMode.Vertical ? "btn-primary" : "btn-outline-primary") btn-sm"
                                        @onclick="SetVerticalLayout" title="Vertical Layout">
                                        <i class="bi bi-arrow-down"></i> Vertical
                                    </button>
                                    <button
                                        class="btn @(layoutMode == PageLayoutMode.SideBySide ? "btn-primary" : "btn-outline-primary") btn-sm"
                                        @onclick="SetSideBySideLayout" title="Side by Side Layout">
                                        <i class="bi bi-arrow-left-right"></i> Side by Side
                                    </button>
                                </div>
                            </div>

                            <!-- Text Tool Controls -->
                            <div class="d-flex align-items-center gap-2">
                                <span class="text-muted small">Tools:</span>
                                <button class="btn btn-outline-success btn-sm" @onclick="ShowAddTextModal" title="Add Text">
                                    <i class="bi bi-type"></i> Add Text
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="card">
            <div class="card-header">
                <h5>Document Preview</h5>
            </div>
            <div class="card-body">
                @if (currentDocument != null && isRendered)
                {
                    <SKCanvasView @ref="canvasView"
                                  OnPaintSurface="OnPaintSurface"
                                  @onpointerdown="OnCanvasClick"
                                  style="width: 100%; height: 100%; cursor: pointer;"/>
                }
                else if (currentDocument != null)
                {
                    <div class="alert alert-info">
                        Document ready. Click "Render Document" to display the preview.
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        No document loaded. Create a new document to start.
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Properties Panel -->
    <div class="col-md-3">
        <div class="card">
            <div class="card-header">
                <h5>Element Properties</h5>
            </div>
            <div class="card-body">
                @if (selectedElement != null)
                {
                    <div class="mb-3">
                        <h6>Selected Element</h6>
                        <p><strong>Name:</strong> @selectedElement.Name</p>
                        <p><strong>Type:</strong> @selectedElement.GetType().Name</p>
                    </div>

                    <div class="mb-3">
                        <h6>Position & Size</h6>
                        <div class="row">
                            <div class="col-6">
                                <label class="form-label">X:</label>
                                <input type="number" class="form-control form-control-sm" 
                                       @bind="selectedElement.X" @bind:after="OnPropertyChanged" />
                            </div>
                            <div class="col-6">
                                <label class="form-label">Y:</label>
                                <input type="number" class="form-control form-control-sm" 
                                       @bind="selectedElement.Y" @bind:after="OnPropertyChanged" />
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-6">
                                <label class="form-label">Width:</label>
                                <input type="number" class="form-control form-control-sm" 
                                       @bind="selectedElement.Width" @bind:after="OnPropertyChanged" />
                            </div>
                            <div class="col-6">
                                <label class="form-label">Height:</label>
                                <input type="number" class="form-control form-control-sm" 
                                       @bind="selectedElement.Height" @bind:after="OnPropertyChanged" />
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <h6>Appearance</h6>
                        <div class="row">
                            <div class="col-6">
                                <label class="form-label">Opacity:</label>
                                <input type="range" class="form-range" min="0" max="1" step="0.1"
                                       @bind="selectedElement.Opacity" @bind:after="OnPropertyChanged" />
                                <small class="text-muted">@selectedElement.Opacity.ToString("F1")</small>
                            </div>
                            <div class="col-6">
                                <label class="form-label">Rotation:</label>
                                <input type="number" class="form-control form-control-sm" 
                                       @bind="selectedElement.Rotation" @bind:after="OnPropertyChanged" />
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" 
                                   @bind="selectedElement.IsVisible" @bind:after="OnPropertyChanged" />
                            <label class="form-check-label">Visible</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" 
                                   @bind="selectedElement.IsLocked" @bind:after="OnPropertyChanged" />
                            <label class="form-check-label">Locked</label>
                        </div>
                    </div>

                    @if (selectedElement is TextElement textElement)
                    {
                        <div class="mb-3">
                            <h6>Text Properties</h6>
                            <div class="mb-2">
                                <label class="form-label">Text:</label>
                                <textarea class="form-control" rows="3" 
                                          @bind="textElement.Text" @bind:after="OnPropertyChanged"></textarea>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <label class="form-label">Font Family:</label>
                                    <input type="text" class="form-control form-control-sm" 
                                           @bind="textElement.FontFamily" @bind:after="OnPropertyChanged" />
                                </div>
                                <div class="col-6">
                                    <label class="form-label">Font Size:</label>
                                    <input type="number" class="form-control form-control-sm" 
                                           @bind="textElement.FontSize" @bind:after="OnPropertyChanged" />
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-muted text-center">
                        <i class="bi bi-cursor"></i>
                        <p>Click on an element to select and edit its properties</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Document Properties Modal -->
<DocumentPropertiesModal IsVisible="showDocumentProperties"
                         Document="currentDocument"
                         OnDocumentChanged="OnDocumentPropertiesChanged"
                         OnClose="CloseDocumentProperties"/>

<!-- Add Pages Modal -->
<AddPagesModal IsVisible="showAddPagesModal"
               Model="addPageModel"
               AddPagesRequested="AddSamplePage"
               CloseRequested="CloseAddPagesModal"/>

<!-- Add Text Modal -->
<AddTextModal IsVisible="showAddTextModal"
              TextContent="newTextContent"
              FontFamily="newTextFontFamily"
              FontSize="newTextFontSize"
              AddTextRequested="OnAddTextRequested"
              CloseRequested="CloseAddTextModal" />